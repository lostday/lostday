1:多态的体现
    父类的引用只想了自己的子类对象
    父类的引用也可以接受自己的子对象

2：多态的前提
    必须是类与类之间有关系，要么继承，要么实现
    通常还有一个前提，存在覆盖
3：多态的好处
    多态的出现大大的提高了程序的扩展性

4：多态的弊端
    提高了扩展性，但是只能使用父类的引用访问父类中的成员

5：多态的应用

6：多态出现在代码中的特点（多态使用的注意事项）